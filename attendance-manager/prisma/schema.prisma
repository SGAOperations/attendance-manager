// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_TEST")
}

enum RoleType {
  EBOARD
  MEMBER
}

enum AttendanceStatus {
  PENDING
  PRESENT
  PENDING_ABSENCE
  EXCUSED_ABSENCE
  UNEXCUSED_ABSENCE
}

model Role {
  roleId   String @id @default(uuid())
  roleType RoleType

  users User[]
}

model User {
  userId    String @id @default(uuid())
  email     String @unique
  firstName String
  lastName  String
  roleId    String
  password  String

  role       Role         @relation(fields: [roleId], references: [roleId])
  attendance Attendance[]
}

model Meeting {
  meetingId String @id @default(uuid())
  name      String
  date      String
  startTime String
  endTime   String
  notes     String

  attendance Attendance[]
}

model Attendance {
  attendanceId String @id @default(uuid())
  userId       String
  meetingId    String
  status       AttendanceStatus

  user    User     @relation(fields: [userId], references: [userId])
  meeting Meeting  @relation(fields: [meetingId], references: [meetingId])
  request Request?

  @@unique([userId, meetingId])
}

model Request {
  requestId    String @id @default(uuid())
  attendanceId String @unique
  reason       String

  attendance Attendance @relation(fields: [attendanceId], references: [attendanceId])
}
