name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL_TEST }}
      NODE_ENV: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        working-directory: backend
        run: npm ci

      - name: Generate Prisma Client
        working-directory: backend
        run: npx prisma generate
      - name: Generate Prisma Client
        working-directory: backend
        run: npx prisma generate
      
      - name: Lint
        working-directory: backend
        run: npm run lint
		
      - name: Prettier
        working-directory: backend
        run: npx prettier "src/**/*.{ts,js,json,md}" "prisma/**/*.{ts,js,json,md}" "*.ts" "*.json" 

      - name: Run Tests
        working-directory: backend
        run: npm run test -- --runInBand

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      NODE_ENV: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.6.0

      - name: Install dependencies
        working-directory: backend
        run: npm ci

      - name: Run Prisma Migrations
        working-directory: backend
        run: npx prisma migrate deploy

      - name: Deploy to Vercel
        run: |
          npm install -g vercel
          vercel --prod \
            --token ${{ secrets.VERCEL_TOKEN }} \
            --org ${{ secrets.VERCEL_ORG_ID }} \
            --project ${{ secrets.VERCEL_PROJECT_ID }}

